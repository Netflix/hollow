buildscript {
    dependencies {
        classpath "software.amazon.awssdk:sso:2.28.11"
        classpath "software.amazon.awssdk:auth:2.28.11"
        classpath "software.amazon.awssdk:sts:2.28.11"
        classpath "software.amazon.awssdk:identity-spi:2.28.11"
    }
}

apply plugin: 'java-library'
apply plugin: 'com.netflix.nebula.facet'

facets {
    tools {
        parentSourceSet = 'test'
    }
}

dependencies {
    api project(':hollow')

    api 'org.apache.velocity:velocity-engine-core:2.3'
    implementation 'org.apache.commons:commons-text:1.10.0'

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation "javax.servlet:javax.servlet-api:4.0.1"
    
    testImplementation 'junit:junit:4.11'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "s3://s3-maven-repository-prelive"
            credentials(AwsCredentials) {
                def profile = System.getProperty("aws.profile") ?: System.getenv("AWS_PROFILE")
                def creds = software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider.builder()
                                .profileName(profile).build().resolveCredentials()
                accessKey = creds.accessKeyId()
                secretKey = creds.secretAccessKey()
                if (creds instanceof software.amazon.awssdk.identity.spi.AwsSessionCredentialsIdentity) {
                    sessionToken = creds.sessionToken()
                }
            }
        }
    }
}
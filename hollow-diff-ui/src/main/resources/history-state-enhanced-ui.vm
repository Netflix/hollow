#**
 *  Copyright 2016 Netflix, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
*#

<!DOCTYPE html>
<html>
<head>
  <title>Hollow Data History</title>
  <!-- <link rel="stylesheet" type="text/css" href="$basePath/resource/normalize.css"/> -->
  <style>
	#total-stats {
	  margin: 0 auto;
	  margin-top: 20px;
	  width: 90%;
	}
	
	h3 {
	  font-size: 20px;
	  text-align: center;
	}
	
	h3 a {
	  text-decoration: none;
	  color: blue;
	}
	
	h3 a:hover {
	  text-decoration: underline;
	}
	
	.stat {
	  display: inline-block;
	  width: 0;
	  text-align: center;
	  vertical-align: middle;
	  color: #fff;
	  letter-spacing: 1px;
	  font-weight: bold;
	  font-family: Arial;
	  font-size: 20px;
	  line-height: 200%;
	}
	
	#total-additions {
	  background-color: green;
	}
	
	#total-modifications {
	  background-color: blue;
	}
	
	#total-removals {
	  background-color: red;
	}
	
	.label {
	  position: absolute;
	  border: 1px solid red;
	}
	
	.type-stats {
	  margin: 0 auto;
	  margin-top: 30px;
	  margin-bottom: 30px;
	  width: 90%;
	}
	
	.type-changes-data {
	  margin: 0 auto;
	  margin-top: 30px;
	  margin-bottom: 30px;
	  width: 90%;
	  display: none;
	}
	
	.type-stats-header {
	  background-color: rgb(241, 241, 241);
	  border: 1px solid rgb(217,217,217);
	  cursor: pointer;
	}
	
	.type-stats-header-title {
	  display: inline-block;
	  width: 25%;
	  line-height: 200%;
	  padding-left: 30px;
	  font-size: 20px;
	  font-weight: 100;
	}
	
	.type-stats-header-changes {
	  display: inline-block;
	  width: 70%;
	  line-height: 200%;
	}
	
	.type-stat {
	  display: inline-block;
	  padding-left: 5px;
	  padding-right: 5px;
	  color: #fff;
	  text-align: center;
	}
	
	.type-stat-additions {
	  background-color: green;
	}
	
	.type-stat-modifications {
	  background-color: blue;
	}
	
	.type-stat-removals {
	  background-color: red;
	}	
	
	.type-additions-container {
		border-left: 5px solid green;
	}
	
	.type-additions-container a {
	  text-decoration: none;
	  color: green;
	}
	
	.type-modifications-container {
		border-left: 5px solid blue;
	}

	.type-modifications-container a {
	  text-decoration: none;
	  color: blue;
	}
	
	.type-removals-container {
		border-left: 5px solid red;
	}

	.type-removals-container a {
	  text-decoration: none;
	  color: red;
	}
	
	.addition {
	  margin: 5px;
	  padding: 5px;
	  color: green;
	  display: inline-block;
	}
	.modification {
	  margin: 5px;
	  padding: 5px;
	  color: blue;
	  display: inline-block;
	}	
	.removal {
	  margin: 5px;
	  padding: 5px;
	  color: red;
	  display: inline-block;
	}	
	.group-by-options-container {
	  text-align: center;
	  padding-top: 10px;
	  padding-bottom: 10px;
	}
	.group-by-option {
	  font-size: 18px;
	  color: magenta;
	  font-weight: bold;
	  display: inline-block;
	  margin-right: 20px;
	  margin-left: 20px;
	}
  </style>
  <script src="//code.jquery.com/jquery-1.12.0.min.js"></script>
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
  <script>
	var total = 0;
	
	function handleAjax(state) {
	  var added = 0;
	  var modified = 0;
	  var removed = 0;
	
	  // Calculate the total number of changes
	  for(var i = 0; i < state.objectTypes.length; i++) {
	    var stats = state.objectTypes[i];
	    added += stats.additions;
	    modified += stats.modifications;
	    removed += stats.removals;
	  }
	
	  total = added + modified + removed;
	
	  // First calculate the % of additions, modifications and removals 
	  var addedWidth = (added / total) * $('#total-stats').width();
	  var modifiedWidth = (modified / total) * $('#total-stats').width();
	  var removedWidth = (removed / total) * $('#total-stats').width();
	
	  if(added >0)
	    $('#total-additions').text(added);
	  if(modified > 0)
	    $('#total-modifications').text(modified);
	  if(removed > 0)
	    $('#total-removals').text(removed);
	
	  $('#total-additions').animate({'width': Math.floor(addedWidth)}, 1000);
	  $('#total-modifications').animate({'width': Math.floor(modifiedWidth)}, 1000);
	  $('#total-removals').animate({'width': Math.floor(removedWidth)}, 1000);
	
	  $('.type-stat').each(function(){
	    var changes = $(this).text();
	    if(changes == 0)
	      $(this).remove();
	    else {
	      var targetWidth = (changes / total) * $(this).parent().width();
	      var currentWidth = $(this).width();
	      if(currentWidth < targetWidth)
	        $(this).css('width', targetWidth);
	    }
	  });
	
	}
	
	function getCurrentVersion() {
	  return $('#current-version').text();
	}
	
	// If the string contains a bracket, the function returns the data inside the bracket 
	function normalize(str) {
	  var start = str.lastIndexOf("(");
	  var end = str.lastIndexOf(")");
	  if(start == -1 || end == -1)
	    return str;
	  else
	    return str.substring(start + 1, end);
	}
	
	function renderAdditions(typeName, additions) {
	  var version = getCurrentVersion();
	  // Create a container which will hold all the additions
	  var container = $('<div>').addClass('type-additions-container');
	  for(var i = 0; i < additions.length; i++) {
	    var addition = additions[i];
	    var identifierString = addition[0];
	    var keyOrdinal = addition[1];
	    var href = 'historicalObject?version=' + version + '&type=' + typeName + '&keyOrdinal=' + keyOrdinal;
	    if(typeName === "CompleteVideo")
	      var link = $('<a>').append(normalize(identifierString)).attr('href', href).attr('title', identifierString);
	    else
	      var link = $('<a>').append(identifierString).attr('href', href);
	    var additionDiv = $('<div>').addClass('addition').append(link);
	    container.append(additionDiv);
	  }
	  $('#' + typeName).find('.type-changes-data').append(container);
	}
	
	function renderModifications(typeName, modifications) {
	  var version = getCurrentVersion();
	  var container = $('<div>').addClass('type-modifications-container');
	  for(var i = 0; i < modifications.length; i++) {
	    var modification = modifications[i];
	    var identifierString = modification[0];
	    var keyOrdinal = modification[1];
	    var href = 'historicalObject?version=' + version + '&type=' + typeName + '&keyOrdinal=' + keyOrdinal;
	    if(typeName === "CompleteVideo")
	      var link = $('<a>').append(normalize(identifierString)).attr('href', href).attr('title', identifierString);
	    else
	      var link = $('<a>').append(identifierString).attr('href', href);
	    var modificationDiv  = $('<div>').addClass('modification').append(link);
	    container.append(modificationDiv);
	  }
	  $('#' + typeName).find('.type-changes-data').append(container);
	}

	function renderRemovals(typeName, removals) {
	  var version = getCurrentVersion();
	  var container = $('<div>').addClass('type-removals-container');
	  for(var i = 0; i < removals.length; i++) {
	    var removal = removals[i];
	    var identifierString = removal[0];
	    var keyOrdinal = removal[1];
	    var href = 'historicalObject?version=' + version + '&type=' + typeName + '&keyOrdinal=' + keyOrdinal;
	    if(typeName === "CompleteVideo")
	      var link = $('<a>').append(normalize(identifierString)).attr('href', href).attr('title', identifierString);
	    else
	      var link = $('<a>').append(identifierString).attr('href', href);
	    var removalDiv  = $('<div>').addClass('removal').append(link);
	    container.append(removalDiv);
	  }
	  $('#' + typeName).find('.type-changes-data').append(container);	  
	}
	
	function renderGroupBy(typeName, groups) {
	  // If there are no groups return
	  if(groups.length == 0) return;
	  var container = $('<div>').addClass('group-by-options-container');
	  for(var i = 0; i < groups.length; i++) {
	    var href = "statetype?version=" + getCurrentVersion() + "&type=" + typeName + "&groupBy=" + groups[i];
	    var link = $('<a>').attr('href', href).append(groups[i]);
	    var groupOption = $('<div>').addClass('group-by-option').append(link);
	    container.append(groupOption);
	  }
	  $('#' + typeName).find('.type-changes-data').append(container);
	  
	}
	
	$(document).ready(function() {
	  //Load the main page by making an AJAX call
	  $.ajax({
	    url: window.location.toString() + '&format=json',
	    dataType: 'json',
	    success: handleAjax
	  });
	  
	  // Render the type change div
	  $('.type-stats-header').click(function(){
	    var version = getCurrentVersion();
	    var typeName = $(this).parent().attr('id');
	    // Dont do anything if already loaded
	    if($('#' + typeName).attr('loaded') === 'true') {
	      $('#' + typeName).find('.type-changes-data').toggle();
	      return;
	    }
	    $.ajax({
	      url: 'statetype?version=' + version + '&type=' + typeName + '&format=json',
	      dataType: 'json',
	      success: function(typeChanges) {
	      	renderGroupBy(typeName, typeChanges.groups[0]);
	      	renderAdditions(typeName, typeChanges.additions);
	      	renderModifications(typeName, typeChanges.modifications);
	      	renderRemovals(typeName, typeChanges.removals);
	      	// Mark that this container is loaded
	      	$('#' + typeName).attr('loaded', 'true');
	      	$('#' + typeName).find('.type-changes-data').show();
	      }
	    });
	  });
	  	  
	});  
  </script>
</head>
<body>
  <h3>
  #if($prevStateVersion != -1)
	<a href="$basePath/state?version=$prevStateVersion">prev version</a>
  #end
  <span id="current-version" style="margin-right: 50px; margin-left: 50px;">$currentStateVersion</span>
  #if($nextStateVersion != -1)
	<a href="$basePath/state?version=$nextStateVersion">next version</a>
  #end
   
  </h3>

  <div id="total-stats">
    <div id="total-additions" class="stat">&nbsp;</div><div id="total-modifications" class="stat">&nbsp;</div><div id="total-removals" class="stat">&nbsp;</div>
  </div>

  #foreach($summary in $typeChanges)

	  <div class="type-stats" id="$summary.getTypeName()" loaded="false">
	    <div class="type-stats-header">
	      <div class="type-stats-header-title">$summary.getTypeName()</div>
	      <div class="type-stats-header-changes">
	        <div class="type-stat-additions type-stat">$summary.getAdditions()</div>
	        <div class="type-stat-modifications type-stat">$summary.getModifications()</div>
	        <div class="type-stat-removals type-stat">$summary.getRemovals()</div>
	      </div>
	    </div>
        <div class="type-changes-data">
          
        </div>
	  </div>
  #end

</body>
</html>
